23
50
84
87
89
107
119
131
162
201
247
275
298
300
0 | Token: INT: -1 | Len: 3
3 | Token: WHITESPACE | Len: 1
4 | Token: ID: gcd | Len: 3
7 | Token: OPARENTHESES | Len: 1
8 | Token: INT: -1 | Len: 3
11 | Token: WHITESPACE | Len: 1
12 | Token: ID: u | Len: 1
13 | Token: COMMA | Len: 1
14 | Token: WHITESPACE | Len: 1
15 | Token: INT: -1 | Len: 3
18 | Token: WHITESPACE | Len: 1
19 | Token: ID: v | Len: 1
20 | Token: CPARENTHESES | Len: 1
21 | Token: OCURLY | Len: 1
22 | Token: WHITESPACE | Len: 1
23 | Token: WHITESPACE | Len: 1
24 | Token: WHITESPACE | Len: 1
25 | Token: WHITESPACE | Len: 1
26 | Token: WHITESPACE | Len: 1
27 | Token: WHITESPACE | Len: 1
28 | Token: IF | Len: 2
30 | Token: WHITESPACE | Len: 1
31 | Token: OPARENTHESES | Len: 1
32 | Token: ID: v | Len: 1
33 | Token: WHITESPACE | Len: 1
34 | Token: EE | Len: 2
36 | Token: WHITESPACE | Len: 1
37 | Token: NUM: 0 | Len: 1
38 | Token: CPARENTHESES | Len: 1
39 | Token: WHITESPACE | Len: 1
40 | Token: RETURN | Len: 6
46 | Token: WHITESPACE | Len: 1
47 | Token: ID: u | Len: 1
48 | Token: SEMICOLON | Len: 1
49 | Token: WHITESPACE | Len: 1
50 | Token: WHITESPACE | Len: 1
51 | Token: WHITESPACE | Len: 1
52 | Token: WHITESPACE | Len: 1
53 | Token: WHITESPACE | Len: 1
54 | Token: WHITESPACE | Len: 1
55 | Token: ELSE | Len: 4
59 | Token: WHITESPACE | Len: 1
60 | Token: RETURN | Len: 6
66 | Token: WHITESPACE | Len: 1
67 | Token: ID: gcd | Len: 3
70 | Token: OPARENTHESES | Len: 1
71 | Token: ID: v | Len: 1
72 | Token: COMMA | Len: 1
73 | Token: WHITESPACE | Len: 1
74 | Token: ID: u | Len: 1
75 | Token: MINUS | Len: 1
76 | Token: ID: u | Len: 1
77 | Token: DIVIDE | Len: 1
78 | Token: ID: v | Len: 1
79 | Token: TIMES | Len: 1
80 | Token: ID: v | Len: 1
81 | Token: CPARENTHESES | Len: 1
82 | Token: SEMICOLON | Len: 1
83 | Token: WHITESPACE | Len: 1
84 | Token: WHITESPACE | Len: 1
85 | Token: CCURLY | Len: 1
86 | Token: WHITESPACE | Len: 1
87 | Token: WHITESPACE | Len: 1
88 | Token: WHITESPACE | Len: 1
89 | Token: WHITESPACE | Len: 1
90 | Token: VOID | Len: 4
94 | Token: WHITESPACE | Len: 1
95 | Token: ID: main | Len: 4
99 | Token: OPARENTHESES | Len: 1
100 | Token: VOID | Len: 4
104 | Token: CPARENTHESES | Len: 1
105 | Token: OCURLY | Len: 1
106 | Token: WHITESPACE | Len: 1
107 | Token: WHITESPACE | Len: 1
108 | Token: WHITESPACE | Len: 1
109 | Token: WHITESPACE | Len: 1
110 | Token: WHITESPACE | Len: 1
111 | Token: WHITESPACE | Len: 1
112 | Token: INT: -1 | Len: 3
115 | Token: WHITESPACE | Len: 1
116 | Token: ID: x | Len: 1
117 | Token: SEMICOLON | Len: 1
118 | Token: WHITESPACE | Len: 1
119 | Token: WHITESPACE | Len: 1
120 | Token: WHITESPACE | Len: 1
121 | Token: WHITESPACE | Len: 1
122 | Token: WHITESPACE | Len: 1
123 | Token: WHITESPACE | Len: 1
124 | Token: INT: -1 | Len: 3
127 | Token: WHITESPACE | Len: 1
128 | Token: ID: y | Len: 1
129 | Token: SEMICOLON | Len: 1
130 | Token: WHITESPACE | Len: 1
131 | Token: WHITESPACE | Len: 1
132 | Token: WHITESPACE | Len: 1
133 | Token: WHITESPACE | Len: 1
134 | Token: WHITESPACE | Len: 1
135 | Token: WHITESPACE | Len: 1
136 | Token: OUTPUT | Len: 6
142 | Token: OPARENTHESES | Len: 1
143 | Token: STRING: \nEuclid's GCD | Len: 16
159 | Token: CPARENTHESES | Len: 1
160 | Token: SEMICOLON | Len: 1
161 | Token: WHITESPACE | Len: 1
162 | Token: WHITESPACE | Len: 1
163 | Token: WHITESPACE | Len: 1
164 | Token: WHITESPACE | Len: 1
165 | Token: WHITESPACE | Len: 1
166 | Token: WHITESPACE | Len: 1
167 | Token: ID: x | Len: 1
168 | Token: WHITESPACE | Len: 1
169 | Token: EQUALS | Len: 1
170 | Token: WHITESPACE | Len: 1
171 | Token: INPUT | Len: 5
176 | Token: OPARENTHESES | Len: 1
177 | Token: STRING: \nEnter a number:\t | Len: 21
198 | Token: CPARENTHESES | Len: 1
199 | Token: SEMICOLON | Len: 1
200 | Token: WHITESPACE | Len: 1
201 | Token: WHITESPACE | Len: 1
202 | Token: WHITESPACE | Len: 1
203 | Token: WHITESPACE | Len: 1
204 | Token: WHITESPACE | Len: 1
205 | Token: WHITESPACE | Len: 1
206 | Token: ID: y | Len: 1
207 | Token: WHITESPACE | Len: 1
208 | Token: EQUALS | Len: 1
209 | Token: WHITESPACE | Len: 1
210 | Token: INPUT | Len: 5
215 | Token: OPARENTHESES | Len: 1
216 | Token: STRING: \nEnter a second number:\t | Len: 28
244 | Token: CPARENTHESES | Len: 1
245 | Token: SEMICOLON | Len: 1
246 | Token: WHITESPACE | Len: 1
247 | Token: WHITESPACE | Len: 1
248 | Token: WHITESPACE | Len: 1
249 | Token: WHITESPACE | Len: 1
250 | Token: WHITESPACE | Len: 1
251 | Token: WHITESPACE | Len: 1
252 | Token: OUTPUT | Len: 6
258 | Token: OPARENTHESES | Len: 1
259 | Token: STRING: \nRESULT:\t | Len: 13
272 | Token: CPARENTHESES | Len: 1
273 | Token: SEMICOLON | Len: 1
274 | Token: WHITESPACE | Len: 1
275 | Token: WHITESPACE | Len: 1
276 | Token: WHITESPACE | Len: 1
277 | Token: WHITESPACE | Len: 1
278 | Token: WHITESPACE | Len: 1
279 | Token: WHITESPACE | Len: 1
280 | Token: OUTPUT | Len: 6
286 | Token: OPARENTHESES | Len: 1
287 | Token: ID: gcd | Len: 3
290 | Token: OPARENTHESES | Len: 1
291 | Token: ID: x | Len: 1
292 | Token: COMMA | Len: 1
293 | Token: ID: y | Len: 1
294 | Token: CPARENTHESES | Len: 1
295 | Token: CPARENTHESES | Len: 1
296 | Token: SEMICOLON | Len: 1
297 | Token: WHITESPACE | Len: 1
298 | Token: WHITESPACE | Len: 1
299 | Token: CCURLY | Len: 1
Line 1 Char 1 | INT: -1
Line 1 Char 5 | ID: gcd
Line 1 Char 8 | OPARENTHESES
Line 1 Char 9 | INT: -1
Line 1 Char 13 | ID: u
Line 1 Char 14 | COMMA
Line 1 Char 16 | INT: -1
Line 1 Char 20 | ID: v
Line 1 Char 21 | CPARENTHESES
Line 1 Char 22 | OCURLY
Line 2 Char 6 | IF
Line 2 Char 9 | OPARENTHESES
Line 2 Char 10 | ID: v
Line 2 Char 12 | EE
Line 2 Char 15 | NUM: 0
Line 2 Char 16 | CPARENTHESES
Line 2 Char 18 | RETURN
Line 2 Char 25 | ID: u
Line 2 Char 26 | SEMICOLON
Line 3 Char 6 | ELSE
Line 3 Char 11 | RETURN
Line 3 Char 18 | ID: gcd
Line 3 Char 21 | OPARENTHESES
Line 3 Char 22 | ID: v
Line 3 Char 23 | COMMA
Line 3 Char 25 | ID: u
Line 3 Char 26 | MINUS
Line 3 Char 27 | ID: u
Line 3 Char 28 | DIVIDE
Line 3 Char 29 | ID: v
Line 3 Char 30 | TIMES
Line 3 Char 31 | ID: v
Line 3 Char 32 | CPARENTHESES
Line 3 Char 33 | SEMICOLON
Line 4 Char 2 | CCURLY
Line 6 Char 2 | VOID
Line 6 Char 7 | ID: main
Line 6 Char 11 | OPARENTHESES
Line 6 Char 12 | VOID
Line 6 Char 16 | CPARENTHESES
Line 6 Char 17 | OCURLY
Line 7 Char 6 | INT: -1
Line 7 Char 10 | ID: x
Line 7 Char 11 | SEMICOLON
Line 8 Char 6 | INT: -1
Line 8 Char 10 | ID: y
Line 8 Char 11 | SEMICOLON
Line 9 Char 6 | OUTPUT
Line 9 Char 12 | OPARENTHESES
Line 9 Char 13 | STRING: \nEuclid's GCD
Line 9 Char 29 | CPARENTHESES
Line 9 Char 30 | SEMICOLON
Line 10 Char 6 | ID: x
Line 10 Char 8 | EQUALS
Line 10 Char 10 | INPUT
Line 10 Char 15 | OPARENTHESES
Line 10 Char 16 | STRING: \nEnter a number:\t
Line 10 Char 37 | CPARENTHESES
Line 10 Char 38 | SEMICOLON
Line 11 Char 6 | ID: y
Line 11 Char 8 | EQUALS
Line 11 Char 10 | INPUT
Line 11 Char 15 | OPARENTHESES
Line 11 Char 16 | STRING: \nEnter a second number:\t
Line 11 Char 44 | CPARENTHESES
Line 11 Char 45 | SEMICOLON
Line 12 Char 6 | OUTPUT
Line 12 Char 12 | OPARENTHESES
Line 12 Char 13 | STRING: \nRESULT:\t
Line 12 Char 26 | CPARENTHESES
Line 12 Char 27 | SEMICOLON
Line 13 Char 6 | OUTPUT
Line 13 Char 12 | OPARENTHESES
Line 13 Char 13 | ID: gcd
Line 13 Char 16 | OPARENTHESES
Line 13 Char 17 | ID: x
Line 13 Char 18 | COMMA
Line 13 Char 19 | ID: y
Line 13 Char 20 | CPARENTHESES
Line 13 Char 21 | CPARENTHESES
Line 13 Char 22 | SEMICOLON
Line 14 Char 2 | CCURLY
Looking for symbol: 'v' in scopes from 1 down to 0
Found symbol 'v' in scope 1
Looking for symbol: 'u' in scopes from 1 down to 0
Found symbol 'u' in scope 1
Looking for symbol: 'u' in scopes from 1 down to 0
Found symbol 'u' in scope 1
Looking for symbol: 'gcd' in scopes from 1 down to 0
Found symbol 'gcd' in scope 0
Looking for symbol: 'gcd' in scopes from 1 down to 0
Found symbol 'gcd' in scope 0
Looking for symbol: 'v' in scopes from 1 down to 0
Found symbol 'v' in scope 1
Looking for symbol: 'v' in scopes from 1 down to 0
Found symbol 'v' in scope 1
Looking for symbol: 'u' in scopes from 1 down to 0
Found symbol 'u' in scope 1
Looking for symbol: 'u' in scopes from 1 down to 0
Found symbol 'u' in scope 1
Looking for symbol: 'u' in scopes from 1 down to 0
Found symbol 'u' in scope 1
Looking for symbol: 'v' in scopes from 1 down to 0
Found symbol 'v' in scope 1
Looking for symbol: 'v' in scopes from 1 down to 0
Found symbol 'v' in scope 1
Looking for symbol: 'x' in scopes from 1 down to 0
Found symbol 'x' in scope 1
Looking for symbol: 'y' in scopes from 1 down to 0
Found symbol 'y' in scope 1
Looking for symbol: 'gcd' in scopes from 1 down to 0
Found symbol 'gcd' in scope 0
Looking for symbol: 'gcd' in scopes from 1 down to 0
Found symbol 'gcd' in scope 0
Looking for symbol: 'x' in scopes from 1 down to 0
Found symbol 'x' in scope 1
Looking for symbol: 'x' in scopes from 1 down to 0
Found symbol 'x' in scope 1
Looking for symbol: 'y' in scopes from 1 down to 0
Found symbol 'y' in scope 1
Looking for symbol: 'y' in scopes from 1 down to 0
Found symbol 'y' in scope 1
Abstract Syntax Tree:
====================
PROGRAM (Type: PROGRAM)
| DECLARATION_LIST (Type: DECLARATION_LIST)
| | DECLARATION (Type: DECLARATION)
| | | FUN_DECLARATION [gcd] (Type: FUN_DECLARATION) = gcd
| | | | TYPE_SPECIFIER [int] (Type: TYPE_SPECIFIER)
| | | | PARAMS (Type: PARAMS)
| | | | | PARAM_LIST (Type: PARAM_LIST)
| | | | | | PARAM [u] (Type: PARAM) = u
| | | | | | | TYPE_SPECIFIER [int] (Type: TYPE_SPECIFIER)
| | | | | | PARAM [v] (Type: PARAM) = v
| | | | | | | TYPE_SPECIFIER [int] (Type: TYPE_SPECIFIER)
| | | | COMPOUNT_STMT (Type: COMPOUNT_STMT)
| | | | | LOCAL_DECLARATIONS (Type: LOCAL_DECLARATIONS)
| | | | | STATEMENT_LIST (Type: STATEMENT_LIST)
| | | | | | STATEMENT (Type: STATEMENT)
| | | | | | | SELECTION_STMT (Type: SELECTION_STMT)
| | | | | | | | SIMPLE_EXPRESSION (Type: SIMPLE_EXPRESSION)
| | | | | | | | | ADDITIVE_EXPR (Type: ADDITIVE_EXPR)
| | | | | | | | | | TERM (Type: TERM)
| | | | | | | | | | | FACTOR (Type: FACTOR)
| | | | | | | | | | | | VAR [v] (Type: VAR) = v
| | | | | | | | | REL_OP [] (Type: REL_OP)
| | | | | | | | | ADDITIVE_EXPR (Type: ADDITIVE_EXPR)
| | | | | | | | | | TERM (Type: TERM)
| | | | | | | | | | | FACTOR (Type: FACTOR)
| | | | | | | | | | | | FACTOR [] (Type: FACTOR)
| | | | | | | | STATEMENT (Type: STATEMENT)
| | | | | | | | | RETURN_STMT (Type: RETURN_STMT)
| | | | | | | | | | EXPRESSION (Type: EXPRESSION)
| | | | | | | | | | | SIMPLE_EXPRESSION (Type: SIMPLE_EXPRESSION)
| | | | | | | | | | | | ADDITIVE_EXPR (Type: ADDITIVE_EXPR)
| | | | | | | | | | | | | TERM (Type: TERM)
| | | | | | | | | | | | | | FACTOR (Type: FACTOR)
| | | | | | | | | | | | | | | VAR [u] (Type: VAR) = u
| | | | | | | | STATEMENT (Type: STATEMENT)
| | | | | | | | | RETURN_STMT (Type: RETURN_STMT)
| | | | | | | | | | EXPRESSION (Type: EXPRESSION)
| | | | | | | | | | | SIMPLE_EXPRESSION (Type: SIMPLE_EXPRESSION)
| | | | | | | | | | | | ADDITIVE_EXPR (Type: ADDITIVE_EXPR)
| | | | | | | | | | | | | TERM (Type: TERM)
| | | | | | | | | | | | | | FACTOR (Type: FACTOR)
| | | | | | | | | | | | | | | CALL [gcd] (Type: CALL) = gcd
| | | | | | | | | | | | | | | | ARGS (Type: ARGS)
| | | | | | | | | | | | | | | | | ARG_LIST (Type: ARG_LIST)
| | | | | | | | | | | | | | | | | | EXPRESSION (Type: EXPRESSION)
| | | | | | | | | | | | | | | | | | | SIMPLE_EXPRESSION (Type: SIMPLE_EXPRESSION)
| | | | | | | | | | | | | | | | | | | | ADDITIVE_EXPR (Type: ADDITIVE_EXPR)
| | | | | | | | | | | | | | | | | | | | | TERM (Type: TERM)
| | | | | | | | | | | | | | | | | | | | | | FACTOR (Type: FACTOR)
| | | | | | | | | | | | | | | | | | | | | | | VAR [v] (Type: VAR) = v
| | | | | | | | | | | | | | | | | | EXPRESSION (Type: EXPRESSION)
| | | | | | | | | | | | | | | | | | | SIMPLE_EXPRESSION (Type: SIMPLE_EXPRESSION)
| | | | | | | | | | | | | | | | | | | | ADDITIVE_EXPR (Type: ADDITIVE_EXPR)
| | | | | | | | | | | | | | | | | | | | | TERM (Type: TERM)
| | | | | | | | | | | | | | | | | | | | | | FACTOR (Type: FACTOR)
| | | | | | | | | | | | | | | | | | | | | | | VAR [u] (Type: VAR) = u
| | | | | | | | | | | | | | | | | | | | | ADD_OP [] (Type: ADD_OP)
| | | | | | | | | | | | | | | | | | | | | TERM (Type: TERM)
| | | | | | | | | | | | | | | | | | | | | | FACTOR (Type: FACTOR)
| | | | | | | | | | | | | | | | | | | | | | | VAR [u] (Type: VAR) = u
| | | | | | | | | | | | | | | | | | | | | | MULOP [] (Type: MULOP)
| | | | | | | | | | | | | | | | | | | | | | FACTOR (Type: FACTOR)
| | | | | | | | | | | | | | | | | | | | | | | VAR [v] (Type: VAR) = v
| | | | | | | | | | | | | | | | | | | | | | MULOP [] (Type: MULOP)
| | | | | | | | | | | | | | | | | | | | | | FACTOR (Type: FACTOR)
| | | | | | | | | | | | | | | | | | | | | | | VAR [v] (Type: VAR) = v
| | DECLARATION (Type: DECLARATION)
| | | FUN_DECLARATION [main] (Type: FUN_DECLARATION) = main
| | | | TYPE_SPECIFIER [void] (Type: TYPE_SPECIFIER)
| | | | PARAMS [void] (Type: PARAMS)
| | | | COMPOUNT_STMT (Type: COMPOUNT_STMT)
| | | | | LOCAL_DECLARATIONS (Type: LOCAL_DECLARATIONS)
| | | | | | VAR_DECLARATION [x] (Type: VAR_DECLARATION) = x
| | | | | | | TYPE_SPECIFIER [int] (Type: TYPE_SPECIFIER)
| | | | | | VAR_DECLARATION [y] (Type: VAR_DECLARATION) = y
| | | | | | | TYPE_SPECIFIER [int] (Type: TYPE_SPECIFIER)
| | | | | STATEMENT_LIST (Type: STATEMENT_LIST)
| | | | | | STATEMENT (Type: STATEMENT)
| | | | | | | IO_STMT (Type: IO_STMT)
| | | | | | | | OUTPUT_STMT [output] (Type: OUTPUT_STMT)
| | | | | | | | | FACTOR [\nEuclid's GCD] (Type: FACTOR)
| | | | | | STATEMENT (Type: STATEMENT)
| | | | | | | EXPRESSION_STMT (Type: EXPRESSION_STMT)
| | | | | | STATEMENT (Type: STATEMENT)
| | | | | | | EXPRESSION_STMT (Type: EXPRESSION_STMT)
| | | | | | | | EXPRESSION (Type: EXPRESSION)
| | | | | | | | | VAR [x] (Type: VAR) = x
| | | | | | | | | EXPRESSION (Type: EXPRESSION)
| | | | | | | | | | SIMPLE_EXPRESSION (Type: SIMPLE_EXPRESSION)
| | | | | | | | | | | ADDITIVE_EXPR (Type: ADDITIVE_EXPR)
| | | | | | | | | | | | TERM (Type: TERM)
| | | | | | | | | | | | | FACTOR (Type: FACTOR)
| | | | | | | | | | | | | | INPUT_STMT [input] (Type: INPUT_STMT)
| | | | | | | | | | | | | | | FACTOR [\nEnter a number:\t] (Type: FACTOR)
| | | | | | STATEMENT (Type: STATEMENT)
| | | | | | | EXPRESSION_STMT (Type: EXPRESSION_STMT)
| | | | | | | | EXPRESSION (Type: EXPRESSION)
| | | | | | | | | VAR [y] (Type: VAR) = y
| | | | | | | | | EXPRESSION (Type: EXPRESSION)
| | | | | | | | | | SIMPLE_EXPRESSION (Type: SIMPLE_EXPRESSION)
| | | | | | | | | | | ADDITIVE_EXPR (Type: ADDITIVE_EXPR)
| | | | | | | | | | | | TERM (Type: TERM)
| | | | | | | | | | | | | FACTOR (Type: FACTOR)
| | | | | | | | | | | | | | INPUT_STMT [input] (Type: INPUT_STMT)
| | | | | | | | | | | | | | | FACTOR [\nEnter a second number:\t] (Type: FACTOR)
| | | | | | STATEMENT (Type: STATEMENT)
| | | | | | | IO_STMT (Type: IO_STMT)
| | | | | | | | OUTPUT_STMT [output] (Type: OUTPUT_STMT)
| | | | | | | | | FACTOR [\nRESULT:\t] (Type: FACTOR)
| | | | | | STATEMENT (Type: STATEMENT)
| | | | | | | EXPRESSION_STMT (Type: EXPRESSION_STMT)
| | | | | | STATEMENT (Type: STATEMENT)
| | | | | | | IO_STMT (Type: IO_STMT)
| | | | | | | | OUTPUT_STMT [output] (Type: OUTPUT_STMT)
| | | | | | | | | EXPRESSION (Type: EXPRESSION)
| | | | | | | | | | SIMPLE_EXPRESSION (Type: SIMPLE_EXPRESSION)
| | | | | | | | | | | ADDITIVE_EXPR (Type: ADDITIVE_EXPR)
| | | | | | | | | | | | TERM (Type: TERM)
| | | | | | | | | | | | | FACTOR (Type: FACTOR)
| | | | | | | | | | | | | | CALL [gcd] (Type: CALL) = gcd
| | | | | | | | | | | | | | | ARGS (Type: ARGS)
| | | | | | | | | | | | | | | | ARG_LIST (Type: ARG_LIST)
| | | | | | | | | | | | | | | | | EXPRESSION (Type: EXPRESSION)
| | | | | | | | | | | | | | | | | | SIMPLE_EXPRESSION (Type: SIMPLE_EXPRESSION)
| | | | | | | | | | | | | | | | | | | ADDITIVE_EXPR (Type: ADDITIVE_EXPR)
| | | | | | | | | | | | | | | | | | | | TERM (Type: TERM)
| | | | | | | | | | | | | | | | | | | | | FACTOR (Type: FACTOR)
| | | | | | | | | | | | | | | | | | | | | | VAR [x] (Type: VAR) = x
| | | | | | | | | | | | | | | | | EXPRESSION (Type: EXPRESSION)
| | | | | | | | | | | | | | | | | | SIMPLE_EXPRESSION (Type: SIMPLE_EXPRESSION)
| | | | | | | | | | | | | | | | | | | ADDITIVE_EXPR (Type: ADDITIVE_EXPR)
| | | | | | | | | | | | | | | | | | | | TERM (Type: TERM)
| | | | | | | | | | | | | | | | | | | | | FACTOR (Type: FACTOR)
| | | | | | | | | | | | | | | | | | | | | | VAR [y] (Type: VAR) = y
| | | | | | STATEMENT (Type: STATEMENT)
| | | | | | | EXPRESSION_STMT (Type: EXPRESSION_STMT)
====================
